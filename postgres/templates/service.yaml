kind: Service
apiVersion: v1
metadata:
  name: postgres-{{.Values.name}}
  namespace:  {{.Release.Namespace}}
  labels:
    system: openstack
    type: database
    component: {{.Values.name}}
spec:
  selector:
{{- if or .Values.pgbouncer.enabled .Values.global.pgbouncer.enabled }}
    name: {{.Values.name}}-pgbouncer
{{- else }}
    name: postgres-{{.Values.name}}
{{- end }}
  ports:
    - name: public
      port: {{.Values.port_public}}
      targetPort: {{ if or .Values.pgbouncer.enabled .Values.global.pgbouncer.enabled }}pgbouncer{{ else }}postgres{{ end }}
    {{- if .Values.external_ip }}
  externalIPs:
    - {{.Values.external_ip }}
    {{- end }}

{{- if and .Values.backup.enabled .Values.backup.metrics }}
---

apiVersion: v1
kind: Service
metadata:
  name: postgres-{{.Values.name}}-backup-metrics
  labels:
    app: postgres-{{.Values.name}}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9188"
spec:
  clusterIP: None
  ports:
    - name: backup-metrics
      port: 9188
      protocol: TCP
  selector:
    name: postgres-{{.Values.name}}
{{- end }}
