{{- if not .Values.worker_enabled }}
kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: designate-poolmanager
  labels:
    system: openstack
    type: backend
    component: designate
spec:
  replicas: {{ .Values.pod.replicas.poolmanager }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      app: designate-poolmanager
  template:
    metadata:
      labels:
        app: designate-poolmanager
{{ tuple . "designate" "poolmanager" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
{{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "5") }}
        scheduler.alpha.kubernetes.io/affinity: >
            {{ tuple . "designate" "poolmanager" | include "kubernetes_pod_anti_affinity" }}
{{- end }}
    spec:
      containers:
        - name: designate-poolmanager
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-designate-pool-manager:{{.Values.image_version_designate_pool_manager | default .Values.image_version | required "Please set designate.image_version or similar" }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "/container.init/designate-poolmanager-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "designate-pools"
            - name: DEBUG_CONTAINER
              value: "false"
            - name: SENTRY_DSN
              value: {{.Values.sentry_dsn | quote}}
          volumeMounts:
            - mountPath: /designate-etc
              name: designate-etc
            - mountPath: /container.init
              name: container-init
      volumes:
        - name: designate-etc
          configMap:
            name: designate-etc
        - name: container-init
          configMap:
            name: designate-bin
            defaultMode: 0755
{{- end }}
